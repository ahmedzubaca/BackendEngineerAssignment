// <auto-generated />
using System;
using BackendEngineerAssignment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendEngineerAssignment.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20221216004241_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Great blog",
                            CreatedAt = new DateTime(2022, 12, 16, 1, 42, 40, 902, DateTimeKind.Local).AddTicks(2877),
                            PostSlug = "augmented-reality-ios-application"
                        },
                        new
                        {
                            Id = 2,
                            Body = "First post comment",
                            CreatedAt = new DateTime(2022, 12, 16, 1, 42, 40, 902, DateTimeKind.Local).AddTicks(2883),
                            PostSlug = "second-title"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Second post comment",
                            CreatedAt = new DateTime(2022, 12, 16, 1, 42, 40, 902, DateTimeKind.Local).AddTicks(2885),
                            PostSlug = "third-title"
                        });
                });

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2022, 12, 16, 1, 42, 40, 902, DateTimeKind.Local).AddTicks(2679),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application",
                            Title = "Augmented Reality iOS Application"
                        },
                        new
                        {
                            Id = 2,
                            Body = "This is the body of second post",
                            CreatedAt = new DateTime(2022, 12, 16, 1, 42, 40, 902, DateTimeKind.Local).AddTicks(2729),
                            Description = "Second post description",
                            Slug = "second-title",
                            Title = "Second Title"
                        },
                        new
                        {
                            Id = 3,
                            Body = "This is the body of third post",
                            CreatedAt = new DateTime(2022, 12, 16, 1, 42, 40, 902, DateTimeKind.Local).AddTicks(2731),
                            Description = "Third post description",
                            Slug = "third-title",
                            Title = "Third Title"
                        });
                });

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.PostTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostsTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 2,
                            PostId = 1,
                            TagId = 2
                        },
                        new
                        {
                            Id = 3,
                            PostId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 4,
                            PostId = 2,
                            TagId = 3
                        },
                        new
                        {
                            Id = 5,
                            PostId = 2,
                            TagId = 4
                        },
                        new
                        {
                            Id = 6,
                            PostId = 3,
                            TagId = 3
                        },
                        new
                        {
                            Id = 7,
                            PostId = 3,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "iOS"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "General"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Second"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Third"
                        });
                });

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.PostTag", b =>
                {
                    b.HasOne("BackendEngineerAssignment.Models.Domain.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendEngineerAssignment.Models.Domain.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.Post", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("BackendEngineerAssignment.Models.Domain.Tag", b =>
                {
                    b.Navigation("PostTags");
                });
#pragma warning restore 612, 618
        }
    }
}
